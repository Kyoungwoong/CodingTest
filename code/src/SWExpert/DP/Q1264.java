package SWExpert.DP;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Q1264 {
    private static int N;
    private static String x, y;
    private static int[][] dp;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine()); // 테스트 케이스 수
        StringBuilder sb = new StringBuilder();

        for (int t = 1; t <= T; t++) {
            N = Integer.parseInt(br.readLine());
            x = br.readLine();
            y = br.readLine();
            dp = new int[x.length()][y.length()];

            init();

            similar();

//            for (int i = 0; i < N; i++) {
//                for (int j = 0; j < N; j++) {
//                    System.out.print(dp[i][j]);
//                }
//                System.out.println();
//            }

            double length = (double) dp[x.length() - 1][y.length() - 1];
            double similarity = (length / (double) N) * 100.0;
            sb.append("#").append(t).append(" ")
                    .append(String.format("%.2f", similarity))
                    .append("\n");
        }
        System.out.println(sb);
    }

    private static void similar() {
        int xLength = x.length(), yLength = y.length();

        for (int i = 1; i < xLength; i++) {
            char xi = x.charAt(i);
            for (int j = 1; j < yLength; j++) {
                char yj = y.charAt(j);

                if (xi == yj) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                } else {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }
    }

    private static void init() {
        int xLength = x.length(), yLength = y.length();
        // x
        for (int i = 0; i < yLength; i++) {
            char x0 = x.charAt(0);
            if (x0 == y.charAt(i)) {
                dp[0][i] = 1;
            } else if (i != 0 && dp[0][i - 1] == 1) {
                dp[0][i] = 1;
            }
        }

        // y
        for (int i = 0; i < xLength; i++) {
            char y0 = y.charAt(0);
            if (y0 == x.charAt(i)) {
                dp[i][0] = 1;
            } else if (i != 0 && dp[i-1][0] == 1) {
                dp[i][0] = 1;
            }
        }
    }
}

/*
10
10
RBKBGRBGGG
BGKRBRKBGB
20
BGBBRRKKRRGGRRBGGRBK
BGBGBKGBBKKRKGBBKGRR
30
BGBBRRKKRRGGRRBGGRBKBGBGBKGBBK
KRKGBBKGRRGGKKBBBBKBGRBGRRRBGR
40
RGGRRBGGRBKBGBGBKGBBKKRKGBBKGRRGGKKBBBBK
BGRBGRRRBGRRGRBRGGBBBKRRKBKKRKRGGBBRBBGB
50
BGGRBKBGBGBKGBBKKRKGBBKGRRGGKKBBBBKBGRBGRRRBGRRGRB
RGGBBBKRRKBKKRKRGGBBRBBGBGGBRBGRBKBBRRKKRRRRRBGRBG
80
BBKGRRGGKKBBBBKBGRBGRRRBGRRGRBRGGBBBKRRKBKKRKRGGBBRBBGBGGBRBGRBKBBRRKKRRRRRBGRBG
RRGBBBBKBKKRRGRBBRKBGRRRRRKKBGRRBBGRBBRRKGRBRBKBBRBBGGRRBGBGGBBBKKKRRRKRKBBKBGGB
100
GBKGBBKKRKGBBKGRRGGKKBBBBKBGRBGRRRBGRRGRBRGGBBBKRRKBKKRKRGGBBRBBGBGGBRBGRBKBBRRKKRRRRRBGRBGRRGBBBBKB
KKRRGRBBRKBGRRRRRKKBGRRBBGRBBRRKGRBRBKBBRBBGGRRBGBGGBBBKKKRRRKRKBBKBGGBKRRRRRKKRRRKGRRBRKRRKBRBBGRGB
150
BGBBRRKKRRGGRRBGGRBKBGBGBKGBBKKRKGBBKGRRGGKKBBBBKBGRBGRRRBGRRGRBRGGBBBKRRKBKKRKRGGBBRBBGBGGBRBGRBKBBRRKKRRRRRBGRBGRRGBBBBKBKKRRGRBBRKBGRRRRRKKBGRRBBGR
BBRRKGRBRBKBBRBBGGRRBGBGGBGBBKKRKGBBKGRRGGKKBBBBKBGRBGRRRBGRRRRRRGRBRGGGBBRBBKRKRKBKKRRKRGGGBBRBBGBGGBRBGRBKBBKRBGBRBGBRBRBRBRBRBGBRBBBRRRBGRBRGRRGBRR
200
BKGBBKKRKGBBKGRRGGKKBBBBKBGRBGRRRBGRRGRBRGGBBBKRRKBKKRKRGGBBRBBGBGGBRBGRBKBBRRKKRRRRRBGRBGRRGBBBBKBKKRRGRBBRKBGRRRRRKKBGRRBBGRBBRRKGRBRBKBBRBBGGRRBGBGGBBBKKKRRRKRKBBKBGGBKRRRRRKKRRRKGRRBRKRRKBRBBGRGBK
KBBKRKRRGBRKRRGBRBRKRKGBRBRKRBGBRBGBRBRBRBRBRBGBRBBBRRRBGRBRGRRGBRRBBBKBRBRBGBRBRBGBKBRBBKRRBBBBBRBBBKBRRBGRKBBBGRRRBBBBRBRBBBRBBRBBKBRKRKBBBRBBRBBRRRRKBRKRBGKRRBKRRBGKKGKBRRGGBBRKGRBBKRKKBBBBBRBBRKBB
500
BGBBRRKKRRGGRRBGGRBKBGBGBKGBBKKRKGBBKGRRGGKKBBBBKBGRBGRRRBGRRGRBRGGBBBKRRKBKKRKRGGBBRBBGBGGBRBGRBKBBRRKKRRRRRBGRBGRRGBBBBKBKKRRGRBBRKBGRRRRRKKBGRRBBGRBBRRKGRBRBKBBRBBGGRRBGBGGBBBKKKRRRKRKBBKBGGBKRRRRRKKRRRKGRRBRKRRKBRBBGRGBKKBBKRKRRGBRKRRGBRBRKRKGBRBRKRBGBRBGBRBRBRBRBRBGBRBBBRRRBGRBRGRRGBRRBBBKBRBRBGBRBRBGBKBRBBKRRBBBBBRBBBKBRRBGRKBBBGRRRBBBBRBRBBBRBBRBBKBRKRKBBBRBBRBBRRRRKBRKRBGKRRBKRRBGKKGKBRRGGBBRKGRBBKRKKBBBBBRBBRKBBRBBRBBRRBRBBGBBGBRBBRKBBKKBBGRRRRRRBRBGBKBRRRGRGBKKBRRBBBGGRBBBBKBBBBKKBKKBR
RKBBKRKBGBKKBGKGKKBGKBBBKKBRRKGKRKKRBKGKBRRBRKRKKRGKBBBKRBBGKBBGBBGKBGKGKBRBBGKBKGKRBGGRRKGBBBBKRGBGKGBKRBKRBKKBGGGRBRRRKBRRRGRKBRRGBKRKKRGBBBKRBBBGRGGKBBBBKBKBGKGBGBBGRKRRRRGRGGRKRGRBKRRKKRBRBKRKKBGGKKRRRKGRRBRKRRKBRBBGRGBKKBBKRKRRGBRKRRGBRBRKRKGBRBRKRBGBRBGBRBRBRBRBRBGBRBBBRRRBGRBRGRRGBRRBBBKBRBRBGBRBRBGBKBRBBKRRBBBBBRBBBKBRRBGRKBBBGRRRBBBBRBRBBBRBBRBBKBRKRKBBBRBBRBBRRRRKBRKRBGKRRBKRRBGKKGKBRRGGBBRKGRBBKRKKBBBBBRBBRKBBRBBRBBRRBRBBGBBGBRBBRKBBKKBBGRRRRRRBRBGBKBRRRGRGBKKBRRBBBGGRBBBBKBBBBKKBKKBR

 */